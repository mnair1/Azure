AWSTemplateFormatVersion: '2010-09-09'
Description: 'Template to create IAM policy that can be attached with respective role'

Parameters:

  Environment:
    Type: String
    Description: Environment name

  Team:
    Type: String
    Description: Team name

  PolicyName:
    Type: String
    Description: Policy name

  Roles:
    Type: String
    Description: Comma separated Roles names to which this policy will be attached
    Default: ""

  Users:
    Type: String
    Description: Comma separated Users names to which this policy will be attached
    Default: ""

  Groups:
    Type: String
    Description: Comma separated Groups names to which this policy will be attached
    Default: ""

  Effect:
    Type: String
    Description: configuration for allowing or denying the specified actions

  ListOfActions:
    Type: String
    Description: Comma separated list of actions that will be applied according to given effect on the specifed resource

  Resource:
    Type: String
    Description: Comma separated Resource ARNs on which the given actions will be applied according to given effect


Conditions:
  AreRolesProvided: !Not [ !Equals [ '', !Ref Roles ]]
  AreUsersProvided: !Not [ !Equals [ '', !Ref Users ]]
  AreGroupsProvided: !Not [ !Equals [ '', !Ref Groups ]]


Resources:
  IAMPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: !Ref Effect
            Action: !Split [",", !Ref ListOfActions]
            Resource: !Split [",", !Ref Resource]
      PolicyName: !Join ["-", [!Ref Environment, !Ref Team, !Ref PolicyName]]
      Roles: !If [AreRolesProvided, !Split [",", !Ref Roles], !Ref "AWS::NoValue"]
      Users: !If [AreUsersProvided, !Split [",", !Ref Users], !Ref "AWS::NoValue"]
      Groups: !If [AreGroupsProvided, !Split [",", !Ref Groups], !Ref "AWS::NoValue"]

Outputs:
  IAMPolicyName:
    Description: Name of IAM Policy
    Value: !Ref IAMPolicy